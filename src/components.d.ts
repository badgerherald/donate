/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface BhrldDonationForm {
        "formTitle": string;
        "no": string;
        "pk": string;
        "rk": string;
        "subhead": string;
    }
    interface ExaDonateAmount {
        "reoccuring": number;
    }
    interface ExaDonateCheckout {
        "amount": number;
        "n": string;
        "pk": string;
        "reoccuring": number;
        "rk": string;
        "serverError": any;
    }
}
declare global {
    interface HTMLBhrldDonationFormElement extends Components.BhrldDonationForm, HTMLStencilElement {
    }
    var HTMLBhrldDonationFormElement: {
        prototype: HTMLBhrldDonationFormElement;
        new (): HTMLBhrldDonationFormElement;
    };
    interface HTMLExaDonateAmountElement extends Components.ExaDonateAmount, HTMLStencilElement {
    }
    var HTMLExaDonateAmountElement: {
        prototype: HTMLExaDonateAmountElement;
        new (): HTMLExaDonateAmountElement;
    };
    interface HTMLExaDonateCheckoutElement extends Components.ExaDonateCheckout, HTMLStencilElement {
    }
    var HTMLExaDonateCheckoutElement: {
        prototype: HTMLExaDonateCheckoutElement;
        new (): HTMLExaDonateCheckoutElement;
    };
    interface HTMLElementTagNameMap {
        "bhrld-donation-form": HTMLBhrldDonationFormElement;
        "exa-donate-amount": HTMLExaDonateAmountElement;
        "exa-donate-checkout": HTMLExaDonateCheckoutElement;
    }
}
declare namespace LocalJSX {
    interface BhrldDonationForm {
        "formTitle"?: string;
        "no"?: string;
        "pk"?: string;
        "rk"?: string;
        "subhead"?: string;
    }
    interface ExaDonateAmount {
        "onAmountChanged"?: (event: CustomEvent<number>) => void;
        "onReoccuringChanged"?: (event: CustomEvent<number>) => void;
        "reoccuring"?: number;
    }
    interface ExaDonateCheckout {
        "amount"?: number;
        "n"?: string;
        "onChangeAmount"?: (event: CustomEvent<any>) => void;
        "onCheckoutFinished"?: (event: CustomEvent<any>) => void;
        "pk"?: string;
        "reoccuring"?: number;
        "rk"?: string;
        "serverError"?: any;
    }
    interface IntrinsicElements {
        "bhrld-donation-form": BhrldDonationForm;
        "exa-donate-amount": ExaDonateAmount;
        "exa-donate-checkout": ExaDonateCheckout;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "bhrld-donation-form": LocalJSX.BhrldDonationForm & JSXBase.HTMLAttributes<HTMLBhrldDonationFormElement>;
            "exa-donate-amount": LocalJSX.ExaDonateAmount & JSXBase.HTMLAttributes<HTMLExaDonateAmountElement>;
            "exa-donate-checkout": LocalJSX.ExaDonateCheckout & JSXBase.HTMLAttributes<HTMLExaDonateCheckoutElement>;
        }
    }
}
