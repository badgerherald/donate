/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface BhDonateForm {}
  interface ExaDonateAmount {
    'reoccuring': number;
  }
  interface ExaDonateCheckout {
    'amount': number;
    'reoccuring': number;
    'serverError': any;
  }
  interface ExaDonateNav {
    'amount': number;
    'isCheckout': boolean;
  }
  interface ExaDonateSpinner {}
}

declare global {


  interface HTMLBhDonateFormElement extends Components.BhDonateForm, HTMLStencilElement {}
  var HTMLBhDonateFormElement: {
    prototype: HTMLBhDonateFormElement;
    new (): HTMLBhDonateFormElement;
  };

  interface HTMLExaDonateAmountElement extends Components.ExaDonateAmount, HTMLStencilElement {}
  var HTMLExaDonateAmountElement: {
    prototype: HTMLExaDonateAmountElement;
    new (): HTMLExaDonateAmountElement;
  };

  interface HTMLExaDonateCheckoutElement extends Components.ExaDonateCheckout, HTMLStencilElement {}
  var HTMLExaDonateCheckoutElement: {
    prototype: HTMLExaDonateCheckoutElement;
    new (): HTMLExaDonateCheckoutElement;
  };

  interface HTMLExaDonateNavElement extends Components.ExaDonateNav, HTMLStencilElement {}
  var HTMLExaDonateNavElement: {
    prototype: HTMLExaDonateNavElement;
    new (): HTMLExaDonateNavElement;
  };

  interface HTMLExaDonateSpinnerElement extends Components.ExaDonateSpinner, HTMLStencilElement {}
  var HTMLExaDonateSpinnerElement: {
    prototype: HTMLExaDonateSpinnerElement;
    new (): HTMLExaDonateSpinnerElement;
  };
  interface HTMLElementTagNameMap {
    'bh-donate-form': HTMLBhDonateFormElement;
    'exa-donate-amount': HTMLExaDonateAmountElement;
    'exa-donate-checkout': HTMLExaDonateCheckoutElement;
    'exa-donate-nav': HTMLExaDonateNavElement;
    'exa-donate-spinner': HTMLExaDonateSpinnerElement;
  }
}

declare namespace LocalJSX {
  interface BhDonateForm {}
  interface ExaDonateAmount {
    'onAmountChanged'?: (event: CustomEvent<number>) => void;
    'onReoccuringChanged'?: (event: CustomEvent<number>) => void;
    'reoccuring'?: number;
  }
  interface ExaDonateCheckout {
    'amount'?: number;
    'onChangeAmount'?: (event: CustomEvent<any>) => void;
    'onCheckoutFinished'?: (event: CustomEvent<any>) => void;
    'reoccuring'?: number;
    'serverError'?: any;
  }
  interface ExaDonateNav {
    'amount'?: number;
    'isCheckout'?: boolean;
  }
  interface ExaDonateSpinner {}

  interface IntrinsicElements {
    'bh-donate-form': BhDonateForm;
    'exa-donate-amount': ExaDonateAmount;
    'exa-donate-checkout': ExaDonateCheckout;
    'exa-donate-nav': ExaDonateNav;
    'exa-donate-spinner': ExaDonateSpinner;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'bh-donate-form': LocalJSX.BhDonateForm & JSXBase.HTMLAttributes<HTMLBhDonateFormElement>;
      'exa-donate-amount': LocalJSX.ExaDonateAmount & JSXBase.HTMLAttributes<HTMLExaDonateAmountElement>;
      'exa-donate-checkout': LocalJSX.ExaDonateCheckout & JSXBase.HTMLAttributes<HTMLExaDonateCheckoutElement>;
      'exa-donate-nav': LocalJSX.ExaDonateNav & JSXBase.HTMLAttributes<HTMLExaDonateNavElement>;
      'exa-donate-spinner': LocalJSX.ExaDonateSpinner & JSXBase.HTMLAttributes<HTMLExaDonateSpinnerElement>;
    }
  }
}


